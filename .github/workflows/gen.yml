name: Build and Release Packages

on:
  schedule:
    - cron: '0 0 * * 0' # Runs weekly at midnight every Sunday (adjust if needed)
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build and Release Packages
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Find and run all build scripts inside ./programs/*
      - name: Run build scripts for all architectures
        run: |
          # Set output directory
          export OUT_DIR="$HOME/out"
          mkdir -p "$OUT_DIR"
          cd "$OUT_DIR"

          DBIN_PGRS="dwarfs-tools bwrap-patched"

          export GOBIN="$HOME/.local/bin"

          mkdir -p "$HOME/.local/bin"

          sudo apt install go
          git clone --depth 1 --branch dev https://github.com/xplshn/pelf
          cp ./pelf/pelf* ~/.local/bin
          cp ./pelf/cmd/misc/* ~/.local/bin
          go install github.com/xplshn/pelf/cmd/pelfd@dev
          go install github.com/xplshn/pelf/cmd/dynexec/lib4bin@dev

          wget -qO- "https://raw.githubusercontent.com/xplshn/dbin/master/stubdl" | sh -s -- --install "$HOME/.local/bin/dbin" $DBIN_PGRS && \
          export PATH="$HOME/.local/bin:$PATH" && {
            ln -sfT "$HOME/.local/bin/dwarfs-tools" "$HOME/.local/bin/mkdwarfs"
            ln -sfT "$HOME/.local/bin/dwarfs-tools" "$HOME/.local/bin/dwarfs"
            ln -sfT "$HOME/.local/bin/bwrap-patched" "$HOME/.local/bin/bwrap"
          }

          # Iterate over build scripts in programs/*
          for dir in ./recipes/*; do
            if [ -d "$dir" ]; then
              for script in "$dir"/*; do
                if [ -x "$script" ]; then
                  echo "Running $script..."
                  $script
                else
                  echo "$script is not executable, skipping."
                fi
              done
            fi
          done

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: weekly-release-${{ github.run_id }}
          release_name: "Weekly Release - Run ${{ github.run_id }}"
          body: "This is an automated release containing built AppBundles."
          draft: false
          prerelease: false

      # Upload each file from $HOME/out to the GitHub release
      - name: Upload Release Assets
        run: |
          for file in $HOME/out/*; do
            if [ -f "$file" ]; then
              echo "Uploading $file"
              gh release upload ${{ steps.create_release.outputs.upload_url }} "$file" --clobber
            fi
          done
