name: Build and Release AppBundles - Alpine

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      script_pattern:
        description: "Pattern to match scripts to build (leave empty to build all)"
        required: false
        default: ""
      release:
        description: "Create a release (true/false)"
        required: false
        default: "true"

jobs:
  build:
    name: Build and Release AppBundles
    runs-on: ubuntu-latest
    permissions: write-all
    container:
      image: alpine:edge
      options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache fuse3 fuse build-base libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev linux-headers mesa-dev go git

      - name: Prepare environment
        run: |
          export GOBIN="$GITHUB_WORKSPACE/.local/bin"
          mkdir -p "$GOBIN"
          git clone --depth 1 --branch dev https://github.com/xplshn/pelf
          cp ./pelf/pelf* "$GOBIN"
          cp ./pelf/cmd/misc/* "$GOBIN"
          echo "GOBIN=$GOBIN" >> $GITHUB_ENV
          echo "PATH=$GOBIN:$PATH" >> $GITHUB_ENV

      - name: Build lib4bin
        run: |
          cd pelf/cmd/dynexec/lib4bin
          go build -o "$GOBIN/lib4bin"

      - name: Install tools and ensure mkdwarfs is available
        run: |
          DBIN_PGRS="dwarfs-tools bwrap-patched sharun yq jq eget2"
          wget -qO- "https://raw.githubusercontent.com/xplshn/dbin/master/stubdl" | sh -s -- --install "$GOBIN/dbin" add $DBIN_PGRS
          PATH="$GOBIN:$PATH"
          ln -sfT "$GOBIN/dwarfs-tools" "$GOBIN/mkdwarfs"
          ln -sfT "$GOBIN/dwarfs-tools" "$GOBIN/dwarfs"
          ln -sfT "$GOBIN/dwarfs-tools" "$GOBIN/dwarfsextract"
          echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Set and Export OUT_DIR
        run: |
          export OUT_DIR="$GITHUB_WORKSPACE/output"
          mkdir -p "$OUT_DIR"
          echo "OUT_DIR=$OUT_DIR" >> $GITHUB_ENV

      - name: Run Build Scripts
        run: |
          cd $OUT_DIR
          pattern="${{ github.event.inputs.script_pattern }}"
          find "$GITHUB_WORKSPACE/AppBundleHUB/recipes" -type f -name "${pattern}.sh" -exec bash {} \;

      - name: Check Final Packaging
        run: |
          if ! command -v mkdwarfs &>/dev/null; then
            echo "ERROR: mkdwarfs could not be found. Please check installation."
            exit 1
          fi
